@import 'drawer';

$animation-duration: 1s;
$drawer-translate-length: calc(100% - (#{$drawer-width} + #{$handle-size}));

#controls {
  height: 100vh;
  overflow: hidden;
  pointer-events: none;
  position: absolute;
  white-space: nowrap;
  width: 100vw;
  z-index: $zindex-fixed;

  // Put the drawer off screen to the left after the controls div
  > div {
    display: inline-block;
  }

  #grid {
    height: 100%;
    vertical-align: top;
    width: 100%;

    // The drawer slides in by shrinking the width of the grid container
    &.slide-in-drawer {
      animation: slide-in-drawer $animation-duration forwards;
    }

    // Provide an option to show the drawer immediately (useful for default drawer opens on page load)
    &.slide-in-drawer-instant {
      animation: slide-in-drawer 0s forwards;
    }

    &.slide-out-drawer {
      animation: slide-out-drawer $animation-duration forwards;
    }

    > div:first-child {
      display: grid;
      grid-template-areas:
        'header header header'
        'filters flashes .'
        'filters action-buttons action-buttons';
      grid-template-columns: 1fr auto 1fr;
      grid-template-rows: auto 1fr;
      height: 100%;
      width: 100%;

      > div * {
        pointer-events: auto;
        white-space: normal;
      }

      .map-header {
        display: flex;
        flex-wrap: wrap;
        grid-area: header;
        justify-content: space-between;
      }

      .filters {
        grid-area: filters;
      }

      .flashes {
        grid-area: flashes;
        margin-top: 40%;
      }

      .action-buttons {
        align-items: flex-end;
        display: flex;
        grid-area: action-buttons;
        justify-content: flex-end;
      }
    }
  }
}

@keyframes slide-in-drawer {
  from {
    width: 100%;
  }

  to {
    width: $drawer-translate-length;
  }
}

@keyframes slide-out-drawer {
  from {
    width: $drawer-translate-length;
  }

  to {
    width: 100%;
  }
}
