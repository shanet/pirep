name: CI
on: [push]

jobs:
  test:
    runs-on: ubuntu-22.04

    services:
      postgres:
        image: postgres:14-alpine
        env:
          POSTGRES_USER: pirep
          POSTGRES_DB: pirep_test
          POSTGRES_PASSWORD: postgres
        ports: ["5432:5432"]
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Install a newer version of GDAL (version >= 3.6.2, we may be able to go back to the default in a future Ubuntu version)
      - name: Update GDAL
        run: |
          echo "deb http://archive.ubuntu.com/ubuntu/ lunar main universe" | sudo tee /etc/apt/sources.list.d/lunar.list

      - name: Install Packages
        run: sudo apt-get update && sudo apt-get install --yes gdal-bin gpg lsb-release libvips python3-gdal

      - name: Install Ruby & Gems
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.2.1
          bundler-cache: true

      - name: Install Golang
        uses: actions/setup-go@v3
        with:
          go-version: ^1 # We don't particularly care about the Go version, but one needs to be specified for $GOBIN to be set (https://github.com/actions/setup-go/issues/49)

      - name: Install Terraform
        run: |
          curl https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor > /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt-get update && sudo apt-get install terraform

          go install github.com/shanet/terraform-lexicographical-lint@latest

      - name: Install Yarn
        uses: actions/setup-node@v3
        with:
          node-version: latest
          cache: yarn

      - name: Install Yarn Packages
        run: yarn install --pure-lockfile

      - name: Build CSS
        run: bin/rails dartsass:build

      - name: Run lint
        run: bin/rails lint

      - name: Run Tests
        run: bin/rails test:all --verbose
        env:
          DATABASE_URL: postgres://pirep:postgres@localhost/pirep_test
          RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}

      - name: 'Upload Artifacts'
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: Test Failure Artifacts
          retention-days: 1
          path: |
            log/test.log
            tmp/screenshots/*.png
